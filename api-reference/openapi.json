{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.useinkless.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/createFromTemplate": {
      "post": {
        "summary": "Create a message from a template (PDF with fields already added) that has been pre-created on Inkless. We recommend selecting 'Auto-release signatures when complete' when creating your template. When enabled, this setting automatically sends the final PDF with signatures once everyone has signed. If this is not enabled, you will need to manually review and release signatures even after everyone has signed.",
        "description": "Sends a message using a predefined template to one or more recipients. We recommend selecting 'Auto-release signatures when complete' when creating your template. When enabled, this setting automatically sends the final PDF with signatures once everyone has signed. If this is not enabled, you will need to manually review and release signatures even after everyone has signed.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["templateId", "recipients"],
                "properties": {
                  "templateId": {
                    "type": "string",
                    "description": "ID of the template to use"
                  },
                  "recipients": {
                    "type": "array",
                    "description": "List of recipient objects",
                    "items": {
                      "type": "object",
                      "required": ["email", "name"],
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "Email address of the recipient"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the recipient"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
              "description": "Successfully created message from template",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Response data",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Status message"
                      },
                      "pdf_id": {
                        "type": "string",
                        "description": "Identifier of the created PDF"
                      },
                      "recipients": {
                        "type": "array",
                        "description": "List of recipient email addresses",
                        "items": {
                          "type": "string",
                          "format": "email"
                        }
                      }
                    }
                  }
                }
              }
            },
          "400": {
            "description": "Invalid request or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (API key missing or invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/webhook": {
      "post": {
        "description": "Information about a new event, such as when a recipient signs a PDF",
        "requestBody": {
          "description": "Event type and data related to the event",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "pdf_id": {
            "description": "The ID of the PDF",
            "type": "string"
          },
          "event_type": {
            "description": "Event type, such as document.signed",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "ID of the event",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}